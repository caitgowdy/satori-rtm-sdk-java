package com.satori.rtm.connection;

import com.satori.rtm.model.PduRaw;
import com.satori.rtm.transport.TransportListener;
import com.satori.rtm.model.InvalidJsonException;
import com.satori.rtm.model.PduException;

/**
 * Listener interface to define application functionality based on connection state changes. For example, you can
 * define application functionality when the connection receives an unsolicited Protocol Data Unit (PDU) or when an
 * error occurs on the connection.
 */
public interface ConnectionListener extends TransportListener {
  /**
   * Called when unsolicited Protocol Data Unit (PDU) is received by the application on the WebSocket
   * transport from the RTM Service. An unsolicited PDU does not contain an {@code id} element.
   *
   * @param pdu Unsolicited PDU.
   * @see PduRaw
   */
  void onUnsolicitedPDU(PduRaw pdu);

  /**
   * Called when an error occurs with the Protocol Data Unit (PDU) that is received by the application
   * from the RTM Service.
   * <p>
   * This method is called when one of the following exceptions occurs:
   * <ul>
   * <li>{@link InvalidJsonException} - Incorrect or invalid JSON format received from
   * the RTM Service.
   * <li>{@link PduException} - The reply from the RTM Service has unexpected format
   * or
   * the RTM Service returns a negative response.
   * </ul>
   *
   * @param error Exception generated by the application.
   */
  void onError(Exception error);
}
